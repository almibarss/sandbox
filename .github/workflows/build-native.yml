name: Build native Java

on: [push]

jobs:
  build-ubuntu-mac:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest]
    steps:
    - uses: actions/checkout@v1
    - uses: DeLaGuardo/setup-graalvm@2.0
      with:
        graalvm-version: '20.3.0.java11'
    - run: java -version
    - run: gu install native-image
    - name: Build native with GraalVM and jbang
      run: curl -sL https://sh.jbang.dev | bash -s - build --fresh --native SendSms.java
    - name: Rename the artifact to OS-unique name
      shell: bash
      run: |
        mkdir -p build/native
        value=`cp $HOME/.jbang/cache/jars/*.bin build/native/sendsms-${{ matrix.os }}`
    - name: Publish artifact
      uses: actions/upload-artifact@master
      with:
        name: sendsms-${{ matrix.os }}
        path: build/native

#   build-windows:
#     runs-on: ${{ matrix.os }}
#     strategy:
#       fail-fast: false
#       matrix:
#         os: [windows-2016, windows-latest]
#     steps:
#       - uses: actions/checkout@v1
#       - uses: DeLaGuardo/setup-graalvm@2.0
#         with:
#           graalvm-version: '19.3.0.2.java11'
#       - run: java -version
#       - name: Set up Visual C Build Tools Workload for Visual Studio 2017 Build Tools
#         run: |
#           choco install visualstudio2017-workload-vctools
#       - name: set env variables and run the Gradle build
#         shell: cmd
#         run: |
#           call "C:\Program Files (x86)\Microsoft Visual Studio\2017\BuildTools\VC\Auxiliary\Build\vcvars64.bat"
#           ./gradlew build
#       - name: Rename the artifact to OS-unique name
#         shell: bash
#         run: |
#           value=`cp build/graal/checksum build/graal/checksum-${{ matrix.os }}`
#       - name: Publish artifact
#         uses: actions/upload-artifact@master
#         with:
#           name: checksum-${{ matrix.os }}.exe
#           path: build/graal
